<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nteligen.hq.dhs.siaft.processors</groupId>
	<artifactId>siaft-processors</artifactId>
	<version>0.1.0</version>
	<packaging>nar</packaging>

	<parent>
		<groupId>com.nteligen.hq.dhs</groupId>
		<artifactId>siaft</artifactId>
		<version>1.0</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<nifi.version>1.18.0</nifi.version>
		<powermock.version>2.0.9</powermock.version>
		<hibernate.version>6.0.4.Final</hibernate.version>
	</properties>

	<dependencies>
    <dependency>
      <groupId>maec.nteligen.dhs.lib</groupId>
      <artifactId>maeclib</artifactId>
      <version>0.0.1</version>
      <scope>system</scope>
      <systemPath>
	      /vagrant/dhs-2022/maeclib/maeclib-0.0.1.jar
    </systemPath>
    </dependency>
    <dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-api</artifactId>
			<version>${nifi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-utils</artifactId>
			<version>${nifi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-processor-utils</artifactId>
			<version>1.15.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.11</version>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-core</artifactId>
			<version>11.10</version>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-gson</artifactId>
			<version>11.10</version>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign.form</groupId>
			<artifactId>feign-form</artifactId>
			<version>3.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>5.0.0-alpha.10</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
			<version>5.0.0-alpha.10</version>
		</dependency>
		<dependency>
			<groupId>com.eclipsesource.minimal-json</groupId>
			<artifactId>minimal-json</artifactId>
			<version>0.9.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.22</version>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.55</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>4.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>4.0.1</version>
    </dependency>
		<!-- https://mvnrepository.com/artifact/com.pff/java-libpst -->
		<dependency>
			<groupId>com.pff</groupId>
			<artifactId>java-libpst</artifactId>
			<version>0.9.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-javadoc-plugin</artifactId>
			<version>3.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-mock</artifactId>
			<version>${nifi.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>6.0.0.Alpha7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>2.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>3.0.8</version>
		</dependency>
		<!-- Hibernate c3p0 connection pool -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>6.1.4.Final</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>5.0.0-alpha.10</version>
			<scope>test</scope>
		</dependency>
		<!-- Provide PowerMock for use in testing -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>5.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.surefire</groupId>
			<artifactId>surefire-junit47</artifactId>
			<version>3.0.0-M7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.7.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>sqltool</artifactId>
			<version>2.7.0</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		    <version>2.4.0-b180830.0359</version>
		</dependency>
	</dependencies>

	<build>
		<!-- Do not include version in nar because it will be packaged into an 
			RPM -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.nifi</groupId>
				<artifactId>nifi-nar-maven-plugin</artifactId>
				<version>1.2.0</version>
				<extensions>true</extensions>
			</plugin>
			<!-- Perform unit tests as a part of the normal build process -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<configuration>
					<skipTests>false</skipTests>
					<reuseForks>false</reuseForks>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<additionalClasspathElements>
						<additionalClasspathElement>provisioning/roles/setupdb/files</additionalClasspathElement>
					</additionalClasspathElements>
					<excludedGroups>com.nteligen.hq.dhs.siaft.IntegrationTests</excludedGroups>
				</configuration>
			</plugin>
			<!-- Perform integration tests using "integration-test" or "verify" targets -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.21.0</version>
				<configuration>
					<includes>
						<include>**/*.java</include>
					</includes>
					<groups>com.nteligen.hq.dhs.siaft.IntegrationTests</groups>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>src/main/resources/checkstyle.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>false</failsOnError>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--	<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1.5</version>
				<executions>
					<execution>
						<id>generate-rpm</id>
						<goals>
							<goal>rpm</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<license>Copyright</license>
					<group>Applications/System</group>
					<mappings>
						<mapping>
							<directory>/opt/nifi-latest/lib</directory>
							<directoryIncluded>false</directoryIncluded>
							<filemode>644</filemode>
							<username>nifi</username>
							<groupname>nifi</groupname>
							<sources>
								<source>
									<location>target/siaft-processors.nar</location>
								</source>
							</sources>
						</mapping>
					</mappings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[3.0.0,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<name>SIAFT</name>
</project>

